// Generated by Xata Codegen 0.29.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "workers",
    columns: [
      { name: "firstName", type: "string" },
      { name: "lastName", type: "string" },
      { name: "phoneNumber", type: "string", unique: true },
      { name: "location", type: "json" },
      { name: "acceptedTerms", type: "json" },
      { name: "type", type: "string" },
      { name: "documents", type: "json" },
      { name: "email", type: "email", unique: true },
      { name: "score", type: "float" },
      { name: "rating", type: "float" },
      { name: "isVerified", type: "bool" },
      { name: "pushToken", type: "text" },
      { name: "status", type: "int", notNull: true, defaultValue: "1" },
      {
        name: "workingHours",
        type: "json",
        notNull: true,
        defaultValue:
          '[\n    {\n        "day": "MONDAY",\n        "start": "08:00",\n        "end": "17:00"\n    },\n    {\n        "day": "TUESDAY",\n        "start": "08:00",\n        "end": "17:00"\n    },\n    {\n        "day": "WEDNESDAY",\n        "start": "08:00",\n        "end": "17:00"\n    },\n    {\n        "day": "THURSDAY",\n        "start": "08:00",\n        "end": "17:00"\n    },\n    {\n        "day": "FRIDAY",\n        "start": "08:00",\n        "end": "17:00"\n    },\n    {\n        "day": "SATURDAY",\n        "start": "08:00",\n        "end": "17:00"\n    },\n    {\n        "day": "SUNDAY",\n        "start": "08:00",\n        "end": "17:00"\n    }\n]',
      },
      { name: "avatar", type: "string" },
      { name: "skills", type: "multiple" },
      { name: "companyName", type: "string", unique: true },
      { name: "properties", type: "json", notNull: true, defaultValue: "[]" },
    ],
    revLinks: [
      { column: "createdBy", table: "portfolios" },
      { column: "workerId", table: "bookings" },
      { column: "worker", table: "messages" },
    ],
  },
  {
    name: "otp",
    columns: [
      { name: "phoneNumber", type: "string", unique: true },
      { name: "code", type: "string" },
      { name: "loginAttempts", type: "int" },
    ],
  },
  {
    name: "portfolios",
    columns: [
      { name: "caption", type: "text" },
      { name: "type", type: "string" },
      { name: "resources", type: "json" },
      { name: "createdBy", type: "link", link: { table: "workers" } },
    ],
    revLinks: [{ column: "portfolio", table: "comments" }],
  },
  {
    name: "skills",
    columns: [
      { name: "name", type: "string", unique: true },
      { name: "icon", type: "string" },
      { name: "description", type: "text" },
      { name: "createdBy", type: "link", link: { table: "admin" } },
    ],
  },
  {
    name: "users",
    columns: [
      { name: "firstName", type: "string" },
      { name: "lastName", type: "string" },
      { name: "email", type: "email", unique: true },
      { name: "phoneNumber", type: "string", unique: true },
      { name: "location", type: "json" },
      { name: "acceptedTerms", type: "json" },
      { name: "pushToken", type: "text" },
      { name: "status", type: "int", notNull: true, defaultValue: "1" },
      { name: "avatar", type: "string" },
    ],
    revLinks: [
      { column: "userId", table: "bookings" },
      { column: "user", table: "messages" },
      { column: "reviewer", table: "reviews" },
    ],
  },
  {
    name: "bookings",
    columns: [
      { name: "start", type: "datetime" },
      { name: "end", type: "datetime" },
      { name: "workerId", type: "link", link: { table: "workers" } },
      { name: "userId", type: "link", link: { table: "users" } },
      { name: "day", type: "datetime", notNull: true, defaultValue: "now" },
      {
        name: "status",
        type: "string",
        notNull: true,
        defaultValue: '"PENDING"',
      },
      { name: "fee", type: "float", notNull: true, defaultValue: "0" },
      { name: "description", type: "text" },
      { name: "media", type: "json" },
      { name: "estimatedFee", type: "float", notNull: true, defaultValue: "0" },
      { name: "timelines", type: "json", notNull: true, defaultValue: "[]" },
      { name: "skills", type: "multiple" },
    ],
    revLinks: [{ column: "booking", table: "reviews" }],
  },
  {
    name: "messages",
    columns: [
      { name: "worker", type: "link", link: { table: "workers" } },
      { name: "user", type: "link", link: { table: "users" } },
      { name: "message", type: "text" },
      { name: "attachments", type: "file[]" },
    ],
  },
  {
    name: "comments",
    columns: [
      { name: "portfolio", type: "link", link: { table: "portfolios" } },
      { name: "comment", type: "text" },
      { name: "author", type: "link", link: { table: "everyone" } },
      { name: "attachments", type: "file[]" },
    ],
  },
  {
    name: "everyone",
    columns: [
      { name: "userId", type: "string", unique: true },
      { name: "userType", type: "string" },
      { name: "firstName", type: "string" },
      { name: "lastName", type: "string" },
      { name: "companyName", type: "string" },
      { name: "phoneNumber", type: "string" },
      { name: "email", type: "email" },
      { name: "pushToken", type: "text" },
      { name: "type", type: "string" },
      { name: "status", type: "int", notNull: true, defaultValue: "1" },
      { name: "avatar", type: "string" },
    ],
    revLinks: [
      { column: "author", table: "comments" },
      { column: "sender", table: "support" },
    ],
  },
  {
    name: "reviews",
    columns: [
      { name: "booking", type: "link", link: { table: "bookings" } },
      { name: "review", type: "text" },
      { name: "attachments", type: "file[]" },
      { name: "reviewer", type: "link", link: { table: "users" } },
    ],
  },
  {
    name: "support",
    columns: [
      { name: "sender", type: "link", link: { table: "everyone" } },
      { name: "question", type: "text" },
      { name: "attachments", type: "file[]" },
    ],
  },
  {
    name: "contacts",
    columns: [
      { name: "firstName", type: "string" },
      { name: "lastName", type: "string" },
      { name: "email", type: "email" },
      { name: "phone", type: "string" },
      { name: "message", type: "text" },
    ],
  },
  {
    name: "admin",
    columns: [
      { name: "firstName", type: "string" },
      { name: "lastName", type: "string" },
      { name: "role", type: "string" },
      { name: "email", type: "email", unique: true },
      { name: "phoneNumber", type: "string", unique: true },
      { name: "status", type: "int", notNull: true, defaultValue: "1" },
    ],
    revLinks: [{ column: "createdBy", table: "skills" }],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Workers = InferredTypes["workers"];
export type WorkersRecord = Workers & XataRecord;

export type Otp = InferredTypes["otp"];
export type OtpRecord = Otp & XataRecord;

export type Portfolios = InferredTypes["portfolios"];
export type PortfoliosRecord = Portfolios & XataRecord;

export type Skills = InferredTypes["skills"];
export type SkillsRecord = Skills & XataRecord;

export type Users = InferredTypes["users"];
export type UsersRecord = Users & XataRecord;

export type Bookings = InferredTypes["bookings"];
export type BookingsRecord = Bookings & XataRecord;

export type Messages = InferredTypes["messages"];
export type MessagesRecord = Messages & XataRecord;

export type Comments = InferredTypes["comments"];
export type CommentsRecord = Comments & XataRecord;

export type Everyone = InferredTypes["everyone"];
export type EveryoneRecord = Everyone & XataRecord;

export type Reviews = InferredTypes["reviews"];
export type ReviewsRecord = Reviews & XataRecord;

export type Support = InferredTypes["support"];
export type SupportRecord = Support & XataRecord;

export type Contacts = InferredTypes["contacts"];
export type ContactsRecord = Contacts & XataRecord;

export type Admin = InferredTypes["admin"];
export type AdminRecord = Admin & XataRecord;

export type DatabaseSchema = {
  workers: WorkersRecord;
  otp: OtpRecord;
  portfolios: PortfoliosRecord;
  skills: SkillsRecord;
  users: UsersRecord;
  bookings: BookingsRecord;
  messages: MessagesRecord;
  comments: CommentsRecord;
  everyone: EveryoneRecord;
  reviews: ReviewsRecord;
  support: SupportRecord;
  contacts: ContactsRecord;
  admin: AdminRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://siawfish-s-workspace-783gv5.ap-southeast-2.xata.sh/db/joolsmen",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
